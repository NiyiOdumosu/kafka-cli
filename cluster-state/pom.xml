<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.github.jeqo.kafka</groupId>
    <artifactId>kafka-cli-parent</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>kafka-cli-cluster-state</artifactId>
  <version>0.3.1-SNAPSHOT</version>

  <name>kafka-cli-cluster-state</name>
  <description>Kafka: CLI: Topic List: Expand Kafka topic listing with Offsets and more.</description>
  <inceptionYear>2022</inceptionYear>
  <url>https://github.com/jeqo/kafka-cli</url>

  <dependencies>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
    </dependency>

    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli-codegen</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.jeqo.kafka</groupId>
      <artifactId>kafka-context</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
    </dependency>
    <dependency>
      <groupId>org.graalvm.nativeimage</groupId>
      <artifactId>svm</artifactId>
      <version>22.0.0.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.github.jeqo.kafka</groupId>
      <artifactId>kafka-clients-graalvm</artifactId>
      <version>0.2.0</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-schema-registry-client</artifactId>
      <version>7.0.1</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- detect OS classifier, needed for distribution Zip file -->
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <!-- Filter for version name in properties -->
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>cli.properties</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>kafka.cli.cluster.state.Cli</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <attach>false</attach>
          <appendAssemblyId>false</appendAssemblyId>
          <finalName>kfk-cluster-state-${project.version}-${os.detected.classifier}</finalName>
          <outputDirectory>${app.distribution.directory}</outputDirectory>
          <workDirectory>${project.build.directory}/assembly/work</workDirectory>
          <skipAssembly>true</skipAssembly>
        </configuration>
        <executions>
          <execution>
            <id>make-distribution</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.9.7.1</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <buildDirectory>bin/</buildDirectory>
              <imageName>kfk-cluster-state-${project.version}</imageName>
              <mainClass>kafka.cli.cluster.state.Cli</mainClass>
              <buildArgs>
                <buildArg>--no-fallback</buildArg>
                <buildArg>--allow-incomplete-classpath</buildArg>
                <buildArg>-H:AdditionalSecurityProviders=com.sun.security.sasl.Provider</buildArg>
                <buildArg>--initialize-at-run-time=org.apache.kafka.common.security.authenticator.SaslClientAuthenticator</buildArg>
                <buildArg>--initialize-at-build-time=org.slf4j.LoggerFactory,org.slf4j.impl.StaticLoggerBinder,org.slf4j.impl.SimpleLogger,org.apache.kafka,kafka,com.fasterxml.jackson,jdk.xml,javax.xml,com.sun.org.apache.xerces,org.yaml.snakeyaml</buildArg>
                <buildArg>-H:ReflectionConfigurationFiles=../src/main/resources/META-INF/native-image/io.github.jeqo.kafka/kafka-clis/reflect-kafka-client.json,../src/main/resources/META-INF/native-image/io.github.jeqo.kafka/kafka-clis/reflect-schema-registry.json</buildArg>
                <buildArg>-H:Log=registerResource:3</buildArg>
                <buildArg>-H:ResourceConfigurationFiles=../src/main/resources/META-INF/native-image/io.github.jeqo.kafka/kafka-clis/resource-config.json</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dist</id>
      <activation>
        <property>
          <name>dist</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration combine.self="append">
              <skipAssembly>false</skipAssembly>
              <descriptors>
                <descriptor>src/main/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dist-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <executable-suffix>.exe</executable-suffix>
      </properties>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jreleaser</groupId>
            <artifactId>jreleaser-maven-plugin</artifactId>
            <version>1.0.0-M2</version>
            <configuration>
              <jreleaser>
                <project>
                  <name>kafka-cli-cluster-state</name>
                  <java>
                    <mainClass>kafka.cli.cluster.state.Cli</mainClass>
                  </java>
                  <snapshot>
                    <label>{{ projectVersionNumber }}-early-access</label>
                  </snapshot>
                </project>
                <release>
                  <github>
                    <owner>jeqo</owner>
                    <name>kafka-cli</name>
                    <tagName>cli-cluster-state-v{{projectVersion}}</tagName>
                    <releaseName>cli:cluster-state v{{projectVersion}}</releaseName>
                    <overwrite>true</overwrite>
                  </github>
                </release>
                <packagers>
                  <brew>
                    <active>RELEASE</active>
                    <continueOnError>true</continueOnError>
                    <multiPlatform>true</multiPlatform>
                  </brew>
                </packagers>
                <distributions>
                  <kfk-cluster-state>
                    <name>kfk-cluster-state</name>
                    <type>NATIVE_IMAGE</type>
                    <artifacts>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-linux-x86_64.tar.gz</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-linux-x86_64.tar.gz</transform>
                        <platform>linux-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-linux-x86_64.zip</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-linux-x86_64.zip</transform>
                        <platform>linux-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-windows-x86_64.zip</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-windows-x86_64.zip</transform>
                        <platform>windows-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-osx-x86_64.zip</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-osx-x86_64.zip</transform>
                        <platform>osx-x86_64</platform>
                      </artifact>
                    </artifacts>
                  </kfk-cluster-state>
                </distributions>
              </jreleaser>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docs</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>generateManPages</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>picocli.codegen.docgen.manpage.ManPageGenerator</mainClass>
              <arguments>
                <argument>--outdir=docs</argument>
                <argument>kafka.cli.cluster.state.Cli</argument>
              </arguments>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli-codegen</artifactId>
                <version>4.6.3</version>
                <type>jar</type>
              </dependency>
            </dependencies>
          </plugin>

          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>2.1.0</version>
            <executions>
              <execution>
                <id>output-html</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>html5</backend>
                </configuration>
              </execution>
              <execution>
                <id>output-manpage</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>manpage</backend>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <sourceDirectory>docs</sourceDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
